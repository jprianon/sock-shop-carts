---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  labels:
    name: carts
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts
  template:
    metadata:
      labels:
        name: carts
      annotations:
        {{- if .Values.istio.enabled }}
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        {{- end }}
    spec:
      containers:
      - name: carts
        image: 715841363614.dkr.ecr.eu-west-1.amazonaws.com/sock-shop-carts:latest #{{ if .Values.global.registry }}{{ .Values.global.registry }}/{{ end }}{{ .Values.carts.image.repo }}:{{ .Values.carts.image.tag }}
        command:
          - /usr/local/bin/java.sh
          - -jar
          - ./app.jar
          - --port={{ .Values.carts.containerPort }}
        env:
          {{- if .Values.zipkin.enabled }}
          - name: ZIPKIN
            value: {{ .Values.zipkin.url }}
          {{- end }}
          - name: JAVA_OPTS
            value: {{ .Values.java.options }}
        resources:
{{ toYaml .Values.carts.resources | indent 10 }}
        ports:
          - containerPort: {{ .Values.carts.containerPort }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          {{- if lt (int .Values.carts.containerPort) 1024 }}
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          {{- end }}
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.carts.containerPort }}
          initialDelaySeconds: 420
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.carts.containerPort }}
          initialDelaySeconds: 360
          periodSeconds: 3
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
